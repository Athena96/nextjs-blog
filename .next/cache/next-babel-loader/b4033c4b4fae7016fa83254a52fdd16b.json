{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { Amplify, API, Auth, withSSRContext } from \"aws-amplify\";\nimport awsExports from \"../src/aws-exports\";\nimport { createPost } from \"../src/graphql/mutations\";\nimport { listPosts } from \"../src/graphql/queries\";\nAmplify.configure(_objectSpread(_objectSpread({}, awsExports), {}, {\n  ssr: true\n}));\nexport default (async (req, res) => {\n  console.log(\"the request...\");\n  console.log(\"this is all ran on the server (in a lambda)\");\n  console.log(req);\n  const SSR = withSSRContext({\n    req\n  });\n  const response = await SSR.API.graphql({\n    query: listPosts\n  });\n  res.status(200).json({\n    text: 'Hello' + JSON.stringify(response)\n  });\n});","map":{"version":3,"sources":["/Users/jffranzo/Desktop/nextjs-blog/pages/api/hello.js"],"names":["Amplify","API","Auth","withSSRContext","awsExports","createPost","listPosts","configure","ssr","req","res","console","log","SSR","response","graphql","query","status","json","text","JSON","stringify"],"mappings":";;;;;;AAAA,SAASA,OAAT,EAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,cAA7B,QAAmD,aAAnD;AACA,OAAOC,UAAP,MAAuB,oBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,QAA0B,wBAA1B;AACAN,OAAO,CAACO,SAAR,iCAAuBH,UAAvB;AAAmCI,EAAAA,GAAG,EAAE;AAAxC;AAEA,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAC/BC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,6CAAZ;AAEAD,EAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AAGA,QAAMI,GAAG,GAAGV,cAAc,CAAC;AAAEM,IAAAA;AAAF,GAAD,CAA1B;AACA,QAAMK,QAAQ,GAAG,MAAMD,GAAG,CAACZ,GAAJ,CAAQc,OAAR,CAAgB;AAAEC,IAAAA,KAAK,EAAEV;AAAT,GAAhB,CAAvB;AAEAI,EAAAA,GAAG,CAACO,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,IAAAA,IAAI,EAAE,UAAUC,IAAI,CAACC,SAAL,CAAeP,QAAf;AAAlB,GAArB;AACH,CAXD","sourcesContent":["import { Amplify, API, Auth, withSSRContext } from \"aws-amplify\";\nimport awsExports from \"../src/aws-exports\";\nimport { createPost } from \"../src/graphql/mutations\";\nimport { listPosts } from \"../src/graphql/queries\";\nAmplify.configure({ ...awsExports, ssr: true });\n\nexport default async (req, res) => {\n    console.log(\"the request...\");\n    console.log(\"this is all ran on the server (in a lambda)\");\n\n    console.log(req);\n    \n\n    const SSR = withSSRContext({ req });\n    const response = await SSR.API.graphql({ query: listPosts });\n  \n    res.status(200).json({ text: 'Hello' + JSON.stringify(response) });\n}"]},"metadata":{},"sourceType":"module"}